version: '3.9'

services:
  nginx:
    container_name: nginx-proxy
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

  frontend:
    container_name: nextjs-app-prod
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://ai.biggeryeah.com/api
    networks:
      - app-network

  backend:
    container_name: fastapi-app-prod
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    environment:
      - FASTAPI_DB_URL=postgresql://fp_user:fp_pass@db:5432/fp_db
      - ONE_API_URL=${ONE_API_URL}
      - ONE_API_KEY=${ONE_API_KEY}
      - GPT4_CHANNEL_ID=${GPT4_CHANNEL_ID:-1}
      - DEEPSEEK_CHANNEL_ID=${DEEPSEEK_CHANNEL_ID:-2}
      - CLAUDE_CHANNEL_ID=${CLAUDE_CHANNEL_ID:-3}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    container_name: db_postgres_prod
    image: postgres:15
    restart: unless-stopped
    environment:
      - POSTGRES_DB=fp_db
      - POSTGRES_USER=fp_user
      - POSTGRES_PASSWORD=fp_pass
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fp_user -d fp_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network

volumes:
  postgres_data_prod:
    driver: local

networks:
  app-network:
    driver: bridge 