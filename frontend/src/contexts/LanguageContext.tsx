'use client'

import { createContext, useContext, useState, useEffect, ReactNode } from 'react'

interface LanguageContextType {
  language: string
  setLanguage: (language: string) => void
  t: (key: string) => string
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined)

interface Translations {
  [key: string]: {
    [key: string]: string
  }
}

const translations: Translations = {
  zh: {
    // 页面标题
    'app.title': '胜利手势',
    'app.subtitle': '商业地产内容生产',
    'app.description': '基于 DeepSeek AI 的智能商业地产内容生成工具',
    
    // 侧边栏导航
    'nav.account': '账号信息',
    'nav.generate': '内容生成',
    'nav.history': '历史记录',
    'nav.violation': '违规检测',
    'nav.tracking': '数据追踪',
    'nav.settings': '系统管理',
    'nav.help': '帮助中心',
    'nav.status.developing': '待开发',
    
    // 页面标题和描述
    'page.generate.title': '内容生成',
    'page.generate.description': '基于 DeepSeek AI 的智能商业地产内容生成工具',
    'page.history.title': '历史记录',
    'page.history.description': '查看所有历史生成记录，包含详细参数和生成结果',
    'page.account.title': '账号信息',
    'page.account.description': '管理您的社交媒体账号信息，包括账号类型和常驻话题',
    
    // 通用
    'common.lastLogin': '最近登录时间',
    'common.loading': '加载中...',
    'common.save': '保存',
    'common.cancel': '取消',
    'common.confirm': '确认',
    'common.edit': '编辑',
    'common.delete': '删除',
    'common.create': '创建',
    'common.update': '更新',
    'common.search': '搜索',
    'common.refresh': '刷新',
    'common.retry': '重试',
    'common.view': '查看',
    'common.close': '关闭',
    'common.copy': '复制',
    'common.copied': '已复制',
    'common.back': '返回',
    'common.reset': '重置',
    'common.generate': '生成',
    'common.total': '总数',
    'common.latest': '最新',
    
    // 内容生成器
    'generator.title': '智能内容生成',
    'generator.subtitle': '基于 DeepSeek AI 的智能小红书图文笔记生成工具',
    'generator.basicContent': '基本内容',
    'generator.basicContentRequired': '必填',
    'generator.basicContentPlaceholder': '请详细描述您要生成的内容...',
    'generator.basicContentTip': '描述越详细，AI 生成的内容越符合您的需求',
    'generator.advancedSettings': '高级参数设置',
    'generator.collapse': '收起',
    'generator.expand': '展开',
    'generator.accountInfo': '账号信息',
    'generator.accountInfoDesc': '个性化设置',
    'generator.selectAccount': '选择账号',
    'generator.selectAccountPlaceholder': '请选择已存储的账号（可选）',
    'generator.selectAccountTip': '选择账号后将使用该账号的话题关键词优化生成内容',
    'generator.contentPositioning': '内容定位',
    'generator.contentPositioningDesc': '核心设置',
    'generator.notePurpose': '笔记目的',
    'generator.contentType': '内容类型',
    'generator.targetAudience': '目标受众',
    'generator.contentStyle': '内容风格',
    'generator.contentStyleDesc': '表达方式',
    'generator.writingStyle': '写作风格',
    'generator.recentTrends': '近期热梗',
    'generator.recentTrendsPlaceholder': '输入当前热门话题，让内容更贴近时事',
    'generator.techSettings': '技术设置',
    'generator.techSettingsDesc': '高级选项',
    'generator.modelSelection': 'AI 模型选择',
    'generator.referenceLinks': '参考链接',
    'generator.referenceLinksTip': '参考链接暂时仅作记录，不参与实际生成',
    'generator.startGenerate': '开始生成',
    'generator.generating': '生成中...',
    'generator.generationResults': '生成结果',
    'generator.modelComparison': '模型对比结果',
    'generator.aiReady': 'AI 生成的内容已准备就绪',
    'generator.modelResults': '个模型的生成结果对比',
    'generator.backToEdit': '返回编辑',
    'generator.copyContent': '复制内容',
    'generator.copyAll': '复制全部',
    'generator.copySuccessBasic': '复制成功',
    'generator.copyFailed': '复制失败，请手动选择并复制内容',
    'generator.commentGuide': '评论引导',
    'generator.interactiveQuestions': '互动问题',
    'generator.xiaohongshuPreview': '小红书预览',
    'generator.previewDesc': '生成后将在此预览小红书效果',
    'generator.inputRequired': '请输入基本内容',
    'generator.generateFailed': '生成失败，请重试',
    'generator.networkError': '网络错误，请检查后端服务是否启动',
    'generator.copyCommentGuide': '复制评论引导',
    'generator.copyCommentQuestions': '复制评论问题',
    'generator.commentGuideLabel': '评论引导：',
    'generator.commentQuestionsLabel': '评论问题：',
    'generator.copying': '复制中...',
    'generator.copySuccess': '复制成功！',
    'generator.copyAllContent': '复制全部内容',
    'generator.modelsSelected': '已选择',
    'generator.modelsComparison': '个模型进行对比',
    'generator.generateSuccess': '生成成功',
    'generator.selectAIModel': '请选择AI模型...',
    'generator.maxModelsReached': '已达到最大选择数量（3个模型）',
    'generator.modelRecommendation': '建议选择1-3个模型进行对比，获得更好的生成效果',
    'generator.pleaseSelectNotePurpose': '请选择笔记目的',
    'generator.pleaseSelectContentType': '请选择内容类型',
    'generator.pleaseSelectTargetAudience': '请选择目标受众',
    'generator.pleaseSelectWritingStyle': '请选择写作风格',
    'generator.trendExample': '例如：双十一、春节、热门话题...',
    'generator.referenceLinkPlaceholder': '可输入参考链接，多个链接用逗号分隔...',
    'generator.currentSelectedAccount': '当前选中账号',
    'generator.accountName': '账号名称：',
    'generator.accountType': '账号类型：',
    'generator.topicKeywords': '常驻话题：',
    'generator.notSet': '未设置',
    'generator.contentCopiedSuccess': '内容已成功复制到剪贴板！',
    'generator.generateButton': '开始生成',
    'generator.generatingButton': '生成中...',
    'generator.modelCount': '个模型',
    'generator.copyAllModelsResult': '复制所有模型生成结果',
    'generator.copySuccessWithModels': '复制成功！({count} 个模型)',
    
    // AI 模型名称翻译
    'models.modelOne': '模型一',
    'models.modelTwo': '模型二',
    'models.modelThree': '模型三',
    'models.modelFour': '模型四',
    'models.modelFive': '模型五',
    
    // 表单选项翻译
    'options.trafficInteraction': '🔥 流量互动',
    'options.guideToStore': '🏪 引导到店',
    'options.driveSales': '💰 拉动销售',
    'options.brandPromotion': '📢 传播造势',
    'options.celebrityIP': '⭐ 明星/IP联动',
    'options.festivalEvent': '🎉 节庆/事件营销',
    'options.newStorePromotion': '🛍️ 新店/促销种草',
    'options.userUGC': '👥 用户UGC共创',
    'options.leisureShopping': '🎮 休闲/玩乐/购物种草',
    'options.brandAdvertising': '📝 品牌宣传',
    'options.announcement': '📋 通知公告',
    'options.shoppingEnthusiasts': '🛒 购物爱好者',
    'options.pragmatists': '⚡ 实用主义者',
    'options.priceSensitive': '💸 价格敏感者',
    'options.decisionDifficulty': '🤔 决策困难者',
    'options.productResearchers': '🔍 产品研究者',
    'options.healthyLifestyle': '🌱 健康生活家',
    'options.qualityLife': '✨ 生活品质控',
    'options.fashionFollowers': '👗 时尚追随者',
    'options.housewives': '👩‍👧‍👦 家庭主妇',
    'options.students': '🎓 学生党',
    'options.colloquial': '💬 口语化',
    'options.formal': '📋 正式',
    'options.enthusiastic': '🔥 热情',
    'options.concise': '⚡ 简洁',
    'options.polite': '🙏 礼貌',
    'options.highEQ': '💡 高情商',
    'options.lyrical': '🎭 抒情',
    'options.witty': '😄 诙谐',
    'options.exaggerated': '🎪 夸张/情绪化',
    'options.humorous': '😂 幽默',
    
    // 笔记表格
    'notes.management': '笔记管理',
    'notes.history': '历史记录详情',
    'notes.managementDesc': '管理已生成的笔记内容',
    'notes.historyDesc': '查看所有历史生成记录，包含详细参数和生成结果',
    'notes.searchPlaceholder': '搜索笔记...',
    'notes.noRecords': '暂无笔记记录',
    'notes.noRecordsDesc': '开始生成您的第一个笔记吧',
    'notes.noSearchResults': '没有找到匹配的笔记',
    'notes.adjustSearch': '尝试调整搜索条件',
    'notes.title': '标题',
    'notes.basicContent': '基本内容',
    'notes.notePurpose': '笔记目的',
    'notes.recentTrends': '近期热梗',
    'notes.contentType': '内容类型',
    'notes.targetAudience': '目标受众',
    'notes.writingStyle': '写作风格',
    'notes.referenceLinks': '参考链接',
    'notes.createdAt': '创建时间',
    'notes.actions': '操作',
    'notes.confirmDelete': '确定要删除这条笔记吗？',
    'notes.deleteFailed': '删除失败，请重试',
    'notes.totalRecords': '条记录',
    'notes.linkText': '链接',
    'notes.fetchFailed': '获取笔记失败，请检查后端服务是否启动',
    
    // 账号信息
    'accounts.title': '账号管理',
    'accounts.description': '管理您的社交媒体账号信息',
    'accounts.management': '账号信息管理',
    'accounts.addAccount': '添加账号',
    'accounts.accountName': '账号名称', 
    'accounts.accountType': '账号类型',
    'accounts.residentTopics': '常驻话题',
    'accounts.platform': '发布平台',
    'accounts.createdAt': '创建时间',
    'accounts.actions': '操作',
    'accounts.noAccounts': '暂无账号信息',
    'accounts.noAccountsDesc': '点击右上角"添加账号"按钮开始创建',
    'accounts.edit': '编辑',
    'accounts.delete': '删除',
    'accounts.confirmDelete': '确定要删除这个账号吗？',
    'accounts.addNewAccount': '添加新账号',
    'accounts.accountNamePlaceholder': '输入账号名称',
    'accounts.accountTypePlaceholder': '输入账号类型，如：个人、企业、品牌、机构等',
    'accounts.topicKeywords': '常驻话题关键词',
    'accounts.topicKeywordsPlaceholder': '用逗号分隔多个关键词，如：美食,旅行,生活,摄影,时尚,健身',
    'accounts.topicKeywordsTip': '💡 提示：每个关键词用逗号分隔，可以输入多行',
    'accounts.cancel': '取消',
    'accounts.createAccount': '创建账号',
    'accounts.fetchFailed': '获取账号信息失败',
    'accounts.createFailed': '创建账号失败',
    'accounts.deleteFailed': '删除账号失败',
  },
  en: {
    // 页面标题
    'app.title': 'Biggeryeah',
    'app.subtitle': 'Commercial Real Estate Content Production',
    'app.description': 'AI-powered commercial real estate content generation tool based on DeepSeek AI',
    
    // 侧边栏导航
    'nav.account': 'Account Info',
    'nav.generate': 'Content Generation',
    'nav.history': 'History',
    'nav.violation': 'Violation Check',
    'nav.tracking': 'Data Track',
    'nav.settings': 'System Management',
    'nav.help': 'Help Center',
    'nav.status.developing': 'In Development',
    
    // 页面标题和描述
    'page.generate.title': 'Content Generation',
    'page.generate.description': 'AI-powered commercial real estate content generation tool based on DeepSeek AI',
    'page.history.title': 'History Records',
    'page.history.description': 'View all historical generation records, including detailed parameters and results',
    'page.account.title': 'Account Information',
    'page.account.description': 'Manage your social media account information, including account types and topics',
    
    // 通用
    'common.lastLogin': 'Last Login',
    'common.loading': 'Loading...',
    'common.save': 'Save',
    'common.cancel': 'Cancel',
    'common.confirm': 'Confirm',
    'common.edit': 'Edit',
    'common.delete': 'Delete',
    'common.create': 'Create',
    'common.update': 'Update',
    'common.search': 'Search',
    'common.refresh': 'Refresh',
    'common.retry': 'Retry',
    'common.view': 'View',
    'common.close': 'Close',
    'common.copy': 'Copy',
    'common.copied': 'Copied',
    'common.back': 'Back',
    'common.reset': 'Reset',
    'common.generate': 'Generate',
    'common.total': 'Total',
    'common.latest': 'Latest',
    
    // Content Generator
    'generator.title': 'Smart Content Generation',
    'generator.subtitle': 'AI-powered Xiaohongshu content generation tool based on DeepSeek AI',
    'generator.basicContent': 'Basic Content',
    'generator.basicContentRequired': 'Required',
    'generator.basicContentPlaceholder': 'Please describe in detail the content you want to generate...',
    'generator.basicContentTip': 'The more detailed the description, the more AI-generated content meets your needs',
    'generator.advancedSettings': 'Advanced Parameter Settings',
    'generator.collapse': 'Collapse',
    'generator.expand': 'Expand',
    'generator.accountInfo': 'Account Information',
    'generator.accountInfoDesc': 'Personalized Settings',
    'generator.selectAccount': 'Select Account',
    'generator.selectAccountPlaceholder': 'Please select a stored account (optional)',
    'generator.selectAccountTip': 'After selecting an account, the topic keywords of that account will be used to optimize the generated content',
    'generator.contentPositioning': 'Content Positioning',
    'generator.contentPositioningDesc': 'Core Settings',
    'generator.notePurpose': 'Note Purpose',
    'generator.contentType': 'Content Type',
    'generator.targetAudience': 'Target Audience',
    'generator.contentStyle': 'Content Style',
    'generator.contentStyleDesc': 'Expression Method',
    'generator.writingStyle': 'Writing Style',
    'generator.recentTrends': 'Recent Trends',
    'generator.recentTrendsPlaceholder': 'Enter current trending topics to make content more relevant',
    'generator.techSettings': 'Technical Settings',
    'generator.techSettingsDesc': 'Advanced Options',
    'generator.modelSelection': 'AI Model Selection',
    'generator.referenceLinks': 'Reference Links',
    'generator.referenceLinksTip': 'Reference links are currently for record only and do not participate in actual generation',
    'generator.startGenerate': 'Start Generation',
    'generator.generating': 'Generating...',
    'generator.generationResults': 'Generation Results',
    'generator.modelComparison': 'Model Comparison Results',
    'generator.aiReady': 'AI-generated content is ready',
    'generator.modelResults': 'model comparison results',
    'generator.backToEdit': 'Back to Edit',
    'generator.copyContent': 'Copy Content',
    'generator.copyAll': 'Copy All',
    'generator.copySuccessBasic': 'Copy Success',
    'generator.copyFailed': 'Copy failed, please manually select and copy content',
    'generator.commentGuide': 'Comment Guide',
    'generator.interactiveQuestions': 'Interactive Questions',
    'generator.xiaohongshuPreview': 'Xiaohongshu Preview',
    'generator.previewDesc': 'After generation, Xiaohongshu effects will be previewed here',
    'generator.inputRequired': 'Please enter basic content',
    'generator.generateFailed': 'Generation failed, please try again',
    'generator.networkError': 'Network error, please check if the backend service is started',
    'generator.copyCommentGuide': 'Copy Comment Guide',
    'generator.copyCommentQuestions': 'Copy Comment Questions',
    'generator.commentGuideLabel': 'Comment Guide:',
    'generator.commentQuestionsLabel': 'Comment Questions:',
    'generator.copying': 'Copying...',
    'generator.copySuccess': 'Copy Success!',
    'generator.copyAllContent': 'Copy All Content',
    'generator.modelsSelected': 'Selected',
    'generator.modelsComparison': 'models for comparison',
    'generator.generateSuccess': 'Generated Successfully',
    'generator.selectAIModel': 'Please select AI model...',
    'generator.maxModelsReached': 'Maximum number of selections reached (3 models)',
    'generator.modelRecommendation': 'Recommend selecting 1-3 models for comparison to get better generation results',
    'generator.pleaseSelectNotePurpose': 'Please select note purpose',
    'generator.pleaseSelectContentType': 'Please select content type',
    'generator.pleaseSelectTargetAudience': 'Please select target audience',
    'generator.pleaseSelectWritingStyle': 'Please select writing style',
    'generator.trendExample': 'e.g.: Black Friday, Christmas, trending topics...',
    'generator.referenceLinkPlaceholder': 'Enter reference links, separate multiple links with commas...',
    'generator.currentSelectedAccount': 'Currently Selected Account',
    'generator.accountName': 'Account Name:',
    'generator.accountType': 'Account Type:',
    'generator.topicKeywords': 'Topic Keywords:',
    'generator.notSet': 'Not Set',
    'generator.contentCopiedSuccess': 'Content has been successfully copied to clipboard!',
    'generator.generateButton': 'Start Generation',
    'generator.generatingButton': 'Generating...',
    'generator.modelCount': 'models',
    'generator.copyAllModelsResult': 'Copy All Model Results',
    'generator.copySuccessWithModels': 'Copy Success! ({count} models)',
    
    // AI Model Names
    'models.modelOne': 'Model One',
    'models.modelTwo': 'Model Two',
    'models.modelThree': 'Model Three',
    'models.modelFour': 'Model Four',
    'models.modelFive': 'Model Five',
    
    // Form Options
    'options.trafficInteraction': '🔥 Traffic Interaction',
    'options.guideToStore': '🏪 Guide to Store',
    'options.driveSales': '💰 Drive Sales',
    'options.brandPromotion': '📢 Brand Promotion',
    'options.celebrityIP': '⭐ Celebrity/IP Collaboration',
    'options.festivalEvent': '🎉 Festival/Event Marketing',
    'options.newStorePromotion': '🛍️ New Store/Promotion Seeding',
    'options.userUGC': '👥 User UGC Co-creation',
    'options.leisureShopping': '🎮 Leisure/Entertainment/Shopping Seeding',
    'options.brandAdvertising': '📝 Brand Advertising',
    'options.announcement': '📋 Announcement',
    'options.shoppingEnthusiasts': '🛒 Shopping Enthusiasts',
    'options.pragmatists': '⚡ Pragmatists',
    'options.priceSensitive': '💸 Price Sensitive',
    'options.decisionDifficulty': '🤔 Decision Difficulty',
    'options.productResearchers': '🔍 Product Researchers',
    'options.healthyLifestyle': '🌱 Healthy Lifestyle',
    'options.qualityLife': '✨ Quality Life',
    'options.fashionFollowers': '👗 Fashion Followers',
    'options.housewives': '👩‍👧‍👦 Housewives',
    'options.students': '🎓 Students',
    'options.colloquial': '💬 Colloquial',
    'options.formal': '📋 Formal',
    'options.enthusiastic': '🔥 Enthusiastic',
    'options.concise': '⚡ Concise',
    'options.polite': '🙏 Polite',
    'options.highEQ': '💡 High EQ',
    'options.lyrical': '🎭 Lyrical',
    'options.witty': '😄 Witty',
    'options.exaggerated': '🎪 Exaggerated/Emotional',
    'options.humorous': '😂 Humorous',
    
    // Notes Table
    'notes.management': 'Note Management',
    'notes.history': 'History Details',
    'notes.managementDesc': 'Manage generated note content',
    'notes.historyDesc': 'View all historical generation records, including detailed parameters and results',
    'notes.searchPlaceholder': 'Search notes...',
    'notes.noRecords': 'No note records',
    'notes.noRecordsDesc': 'Start generating your first note',
    'notes.noSearchResults': 'No matching notes found',
    'notes.adjustSearch': 'Try adjusting search criteria',
    'notes.title': 'Title',
    'notes.basicContent': 'Basic Content',
    'notes.notePurpose': 'Note Purpose',
    'notes.recentTrends': 'Recent Trends',
    'notes.contentType': 'Content Type',
    'notes.targetAudience': 'Target Audience',
    'notes.writingStyle': 'Writing Style',
    'notes.referenceLinks': 'Reference Links',
    'notes.createdAt': 'Created At',
    'notes.actions': 'Actions',
    'notes.confirmDelete': 'Are you sure you want to delete this note?',
    'notes.deleteFailed': 'Delete failed, please try again',
    'notes.totalRecords': 'records',
    'notes.linkText': 'Link',
    'notes.fetchFailed': 'Failed to fetch notes, please check if the backend service is started',
    
    // Account Information
    'accounts.title': 'Account Management',
    'accounts.description': 'Manage your social media account information',
    'accounts.management': 'Account Information Management',
    'accounts.addAccount': 'Add Account',
    'accounts.accountName': 'Account Name',
    'accounts.accountType': 'Account Type',
    'accounts.residentTopics': 'Resident Topics',
    'accounts.platform': 'Platform',
    'accounts.createdAt': 'Created At',
    'accounts.actions': 'Actions',
    'accounts.noAccounts': 'No account information',
    'accounts.noAccountsDesc': 'Click the "Add Account" button in the upper right corner to start creating',
    'accounts.edit': 'Edit',
    'accounts.delete': 'Delete',
    'accounts.confirmDelete': 'Are you sure you want to delete this account?',
    'accounts.addNewAccount': 'Add New Account',
    'accounts.accountNamePlaceholder': 'Enter account name',
    'accounts.accountTypePlaceholder': 'Enter account type, such as: personal, enterprise, brand, institution, etc.',
    'accounts.topicKeywords': 'Resident Topic Keywords',
    'accounts.topicKeywordsPlaceholder': 'Separate multiple keywords with commas, such as: food, travel, life, photography, fashion, fitness',
    'accounts.topicKeywordsTip': '💡 Tip: Each keyword is separated by commas, multiple lines can be entered',
    'accounts.cancel': 'Cancel',
    'accounts.createAccount': 'Create Account',
    'accounts.fetchFailed': 'Failed to get account information',
    'accounts.createFailed': 'Failed to create account',
    'accounts.deleteFailed': 'Failed to delete account',
  }
}

interface LanguageProviderProps {
  children: ReactNode
}

export function LanguageProvider({ children }: LanguageProviderProps) {
  const [language, setLanguageState] = useState('zh')

  useEffect(() => {
    // 从 localStorage 读取保存的语言偏好
    const savedLanguage = localStorage.getItem('language')
    if (savedLanguage && (savedLanguage === 'zh' || savedLanguage === 'en')) {
      setLanguageState(savedLanguage)
    }
  }, [])

  const setLanguage = (newLanguage: string) => {
    setLanguageState(newLanguage)
    localStorage.setItem('language', newLanguage)
  }

  const t = (key: string): string => {
    return translations[language]?.[key] || key
  }

  return (
    <LanguageContext.Provider value={{ language, setLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  )
}

export function useLanguage() {
  const context = useContext(LanguageContext)
  if (context === undefined) {
    throw new Error('useLanguage must be used within a LanguageProvider')
  }
  return context
} 