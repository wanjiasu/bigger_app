version: '3.9'
services:
  db:
    container_name: db_postgres
    image: postgres:15
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:                   # 添加健康检查
      test: ["CMD-SHELL", "pg_isready -U postgres_admin -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  frontend:
    container_name: nextjs-app
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app       # 映射代码目录（实现热更新）
      - /app/node_modules     # 不覆盖容器内 node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development

  backend:
    container_name: fastapi-app
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - FASTAPI_DB_URL=postgresql://fp_user:fp_pass@db:5432/fp_db
    depends_on:
      db:
        condition: service_healthy  # 等待数据库健康检查通过
    restart: unless-stopped        # 添加重启策略
  nocodb:
    container_name: nocodb
    image: nocodb/nocodb:latest
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      NC_DB: ${NOCO_DB_URL}
      NC_AUTH_JWT_SECRET: ${NC_AUTH_JWT_SECRET}
    volumes:
      - nocodb_data:/usr/app/data

volumes:
  postgres_data:
  nocodb_data:

